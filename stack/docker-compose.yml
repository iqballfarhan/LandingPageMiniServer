version: "3.8"

services:
  landingpage:
    image: nginx:alpine
    container_name: landingpage
    restart: unless-stopped
    ports:
      - "100:80"
    command: >
      /bin/sh -c "
      echo '=== Setting up directories ===' &&
      mkdir -p /usr/share/nginx/html/css &&
      mkdir -p /usr/share/nginx/html/js &&
      echo '=== Configuring Nginx for clean URLs ===' &&
      rm -f /etc/nginx/conf.d/default.conf &&
      echo 'server {' > /etc/nginx/conf.d/default.conf &&
      echo '    listen 80;' >> /etc/nginx/conf.d/default.conf &&
      echo '    server_name _;' >> /etc/nginx/conf.d/default.conf &&
      echo '    root /usr/share/nginx/html;' >> /etc/nginx/conf.d/default.conf &&
      echo '    index login.html;' >> /etc/nginx/conf.d/default.conf &&
      echo '    location = / {' >> /etc/nginx/conf.d/default.conf &&
      echo '        return 301 /login;' >> /etc/nginx/conf.d/default.conf &&
      echo '    }' >> /etc/nginx/conf.d/default.conf &&
      echo '    if (\$\$request_uri ~ ^/(.+)\\\\.html\$\$) {' >> /etc/nginx/conf.d/default.conf &&
      echo '        return 301 /\$\$1;' >> /etc/nginx/conf.d/default.conf &&
      echo '    }' >> /etc/nginx/conf.d/default.conf &&
      echo '    location / {' >> /etc/nginx/conf.d/default.conf &&
      echo '        try_files \$\$uri \$\$uri.html \$\$uri/ =404;' >> /etc/nginx/conf.d/default.conf &&
      echo '    }' >> /etc/nginx/conf.d/default.conf &&
      echo '    location ~* \\\\.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)\$\$ {' >> /etc/nginx/conf.d/default.conf &&
      echo '        expires 7d;' >> /etc/nginx/conf.d/default.conf &&
      echo '        add_header Cache-Control \"public, immutable\";' >> /etc/nginx/conf.d/default.conf &&
      echo '    }' >> /etc/nginx/conf.d/default.conf &&
      echo '    add_header X-Frame-Options \"SAMEORIGIN\" always;' >> /etc/nginx/conf.d/default.conf &&
      echo '    add_header X-Content-Type-Options \"nosniff\" always;' >> /etc/nginx/conf.d/default.conf &&
      echo '    add_header X-XSS-Protection \"1; mode=block\" always;' >> /etc/nginx/conf.d/default.conf &&
      echo '}' >> /etc/nginx/conf.d/default.conf &&
      echo 'nginx.conf: CREATED' &&
      echo '=== Verifying nginx.conf ===' &&
      cat /etc/nginx/conf.d/default.conf &&
      echo '=== Downloading UI Old (Classic Dashboard) ===' &&
      curl -sSL -o /usr/share/nginx/html/index.html https://raw.githubusercontent.com/iqballfarhan/LandingPageMiniServer/main/stack/html/index.html && echo 'index.html: OK' || echo 'index.html: FAILED' &&
      curl -sSL -o /usr/share/nginx/html/css/index-old.css https://raw.githubusercontent.com/iqballfarhan/LandingPageMiniServer/main/stack/html/css/index-old.css && echo 'index-old.css: OK' || echo 'index-old.css: FAILED' &&
      curl -sSL -o /usr/share/nginx/html/js/index-old.js https://raw.githubusercontent.com/iqballfarhan/LandingPageMiniServer/main/stack/html/js/index-old.js && echo 'index-old.js: OK' || echo 'index-old.js: FAILED' &&
      echo '=== Downloading UI New (Pro Dashboard) ===' &&
      curl -sSL -o /usr/share/nginx/html/index-new.html https://raw.githubusercontent.com/iqballfarhan/LandingPageMiniServer/main/stack/html/index-new.html && echo 'index-new.html: OK' || echo 'index-new.html: FAILED' &&
      curl -sSL -o /usr/share/nginx/html/css/index-new.css https://raw.githubusercontent.com/iqballfarhan/LandingPageMiniServer/main/stack/html/css/index-new.css && echo 'index-new.css: OK' || echo 'index-new.css: FAILED' &&
      curl -sSL -o /usr/share/nginx/html/js/index-new.js https://raw.githubusercontent.com/iqballfarhan/LandingPageMiniServer/main/stack/html/js/index-new.js && echo 'index-new.js: OK' || echo 'index-new.js: FAILED' &&
      echo '=== Downloading Login Page ===' &&
      curl -sSL -o /usr/share/nginx/html/login.html https://raw.githubusercontent.com/iqballfarhan/LandingPageMiniServer/main/stack/html/login.html && echo 'login.html: OK' || echo 'login.html: FAILED' &&
      curl -sSL -o /usr/share/nginx/html/css/login.css https://raw.githubusercontent.com/iqballfarhan/LandingPageMiniServer/main/stack/html/css/login.css && echo 'login.css: OK' || echo 'login.css: FAILED' &&
      curl -sSL -o /usr/share/nginx/html/js/login.js https://raw.githubusercontent.com/iqballfarhan/LandingPageMiniServer/main/stack/html/js/login.js && echo 'login.js: OK' || echo 'login.js: FAILED' &&
      echo '=== Testing Nginx config ===' &&
      nginx -t &&
      echo '=== Files ready ===' &&
      ls -lh /usr/share/nginx/html/ &&
      echo '=== Starting Nginx ===' &&
      nginx -g 'daemon off;'
      "
    networks:
      - webnet

networks:
  webnet:
    driver: bridge
